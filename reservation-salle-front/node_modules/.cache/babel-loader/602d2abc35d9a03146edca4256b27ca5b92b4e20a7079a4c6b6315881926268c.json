{"ast":null,"code":"var _jsxFileName = \"D:\\\\SPRING BOOT\\\\reservation-salle\\\\reservation-salle-front\\\\src\\\\page\\\\login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-hot-toast';\nimport axios from \"axios\";\nimport \"./login.css\";\nimport { useForm } from \"react-hook-form\";\nimport { getUriUser } from \"../../UrlTools\";\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [userForm, setForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    /*if (localStorage.getItem('token')!== \"\"){\r\n        navigate('/');\r\n        toast.success(\"Vous êtes connecté!\");\r\n    }*/\n  });\n  const {\n    handleSubmit\n  } = useForm();\n  function onSubmit(data) {\n    axios.post(getUriUser(`login`), userForm).then(response => {\n      if (response.data.status === 0) {\n        const user = jwtDecode(response.data.accessToken).sub;\n        localStorage.setItem('token', response.data.accessToken);\n        localStorage.setItem('user', user);\n        // Mise à jour de l'état avec les données décodées\n        toast.success(\"Vous êtes connecté!\");\n        navigate('/');\n      } else {\n        toast.error(\"Username ou password incorrect!\");\n      }\n    });\n  }\n  const registerUser = () => {\n    //setData({});\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Email\",\n            id: \"username\",\n            value: userForm.username,\n            name: \"username\",\n            onChange: e => {\n              setForm(prevState => ({\n                ...prevState,\n                username: e.target.value\n              }));\n            },\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            id: \"password\",\n            value: userForm.password,\n            name: \"password\",\n            onChange: e => {\n              setForm(prevState => ({\n                ...prevState,\n                password: e.target.value\n              }));\n            },\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            className: \"lButton\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: registerUser,\n            className: \"lButton\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"mPx8IvDtqljJSJGETUpxUKO8rS4=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useState","useNavigate","toast","axios","useForm","getUriUser","jwtDecode","jsxDEV","_jsxDEV","Login","_s","navigate","userForm","setForm","username","password","handleSubmit","onSubmit","data","post","then","response","status","user","accessToken","sub","localStorage","setItem","success","error","registerUser","children","className","type","placeholder","id","value","name","onChange","e","prevState","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/src/page/login/Login.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {toast} from 'react-hot-toast';\r\nimport axios from \"axios\";\r\nimport \"./login.css\";\r\nimport {LoginType} from \"../../model/login.model\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {getUriUser} from \"../../UrlTools\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction Login  ()   {\r\n    const navigate = useNavigate()\r\n    const [userForm, setForm] = useState<LoginType>({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        /*if (localStorage.getItem('token')!== \"\"){\r\n            navigate('/');\r\n            toast.success(\"Vous êtes connecté!\");\r\n        }*/\r\n    })\r\n\r\n    const {handleSubmit} = useForm();\r\n\r\n    function onSubmit(data: any): any{\r\n        axios.post(getUriUser(`login`), userForm).then((response) => {\r\n            if (response.data.status===0){\r\n                const user: string = jwtDecode(response.data.accessToken).sub!;\r\n                localStorage.setItem('token', response.data.accessToken);\r\n                localStorage.setItem('user', user);\r\n                // Mise à jour de l'état avec les données décodées\r\n                toast.success(\"Vous êtes connecté!\");\r\n                navigate('/');\r\n            }else {\r\n                toast.error(\"Username ou password incorrect!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const registerUser = () => {\r\n        //setData({});\r\n        navigate('/register')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* TopBar Component */}\r\n            <div className=\"login\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"lContainer\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            id=\"username\"\r\n                            value={userForm.username}\r\n                            name={\"username\"}\r\n                            onChange={(e: any) => {\r\n                                setForm(prevState => ({\r\n                                    ...prevState,\r\n                                    username: e.target.value,\r\n                                }));\r\n                            }}\r\n                            className=\"lInput\"\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            id=\"password\"\r\n                            value={userForm.password}\r\n                            name={\"password\"}\r\n                            onChange={(e: any) => {\r\n                                setForm(prevState => ({\r\n                                    ...prevState,\r\n                                    password: e.target.value,\r\n                                }));\r\n                            }}\r\n                            className=\"lInput\"\r\n                        />\r\n                        <button onClick={onSubmit} className=\"lButton\">\r\n                            Login\r\n                        </button>\r\n                        <button onClick={registerUser} className=\"lButton\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}