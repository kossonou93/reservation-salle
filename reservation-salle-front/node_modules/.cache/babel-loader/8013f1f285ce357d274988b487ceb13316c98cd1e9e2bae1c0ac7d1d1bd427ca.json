{"ast":null,"code":"var _jsxFileName = \"D:\\\\SPRING BOOT\\\\reservation-salle\\\\reservation-salle-front\\\\src\\\\page\\\\register\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-hot-toast';\nimport axios from \"axios\";\nimport \"./register.css\";\nimport { getUriUser } from \"../../UrlTools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    username: '',\n    contact: '',\n    password: '',\n    roles: []\n  });\n  const [userForm, setForm] = useState({\n    id: undefined,\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    contact: \"\",\n    roles: [\"USER_ROLE\"]\n  });\n  const {\n    handleSubmit\n  } = userForm();\n  function onSubmit(data) {\n    axios.post(getUriUser(`enregistrer`, userForm)).then(response => {\n      if (response.status === 0) {\n        toast.success(\"Enregistrement éffectuer avec succès\");\n        navigate('/login');\n      } else {\n        toast.error(\"Une erreur s'est produite lors de l'enregistrement\");\n      }\n    });\n  }\n\n  /*const registerAdmin = async () => {\r\n      //e.preventDefault()\r\n      const {name, email, username, contact, password, roles} = data\r\n      try {\r\n          const {data} = await axios.post('/enregister', {\r\n              name,\r\n              email,\r\n              username,\r\n              contact,\r\n              password,\r\n              roles,\r\n          });\r\n          setData({...data, roles: [{\"id\": 0, \"version\": 0, \"name\": \"ROLE_USER\"}]});\r\n          if(data.error) {\r\n              toast.error(data.error)\r\n          } else {\r\n              //setData({});\r\n              //navigate('/admin')\r\n              axios.post(getUriUser(`enregistrer`, userForm)).then((response) => {\r\n                  if (response.status===0){\r\n                      toast.success(\"Enregistrement éffectuer avec succès\");\r\n                      navigate('/login');\r\n                  }else {\r\n                      toast.error(\"Une erreur s'est produite lors de l'enregistrement\");\r\n                  }\r\n              });\r\n          }\r\n      } catch (error) {\r\n        }\r\n  }*/\n\n  const loginAdmin = () => {\n    //setData({});\n    navigate('/admin');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            id: \"name\",\n            name: \"name\",\n            onChange: e => setForm({\n              ...data,\n              name: e.target.value\n            }),\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Email\",\n            id: \"email\",\n            onChange: e => setForm({\n              ...data,\n              email: e.target.value\n            }),\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            id: \"username\",\n            onChange: e => setForm({\n              ...data,\n              username: e.target.value\n            }),\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Contact\",\n            id: \"contact\",\n            onChange: e => setForm({\n              ...data,\n              contact: e.target.value\n            }),\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            id: \"password\",\n            onChange: e => setForm({\n              ...data,\n              password: e.target.value\n            }),\n            className: \"lInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"lButton\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loginAdmin,\n            className: \"lButton\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"4kQDMBpBTxULUeQ3AuckVvHkezk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","toast","axios","getUriUser","jsxDEV","_jsxDEV","Register","_s","navigate","data","setData","name","email","username","contact","password","roles","userForm","setForm","id","undefined","handleSubmit","onSubmit","post","then","response","status","success","error","loginAdmin","children","className","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/src/page/register/Register.tsx"],"sourcesContent":["import {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {toast} from 'react-hot-toast';\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\nimport type {Role} from \"../../model/role.model\";\r\nimport {getUriUser} from \"../../UrlTools\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {User} from \"../../model/user.model\";\r\n\r\nfunction Register  ()   {\r\n    const navigate = useNavigate()\r\n    const [data, setData] = useState({\r\n        name : '',\r\n        email: '',\r\n        username: '',\r\n        contact: '',\r\n        password: '',\r\n        roles: [],\r\n    });\r\n    const [userForm, setForm] = useState<User>({\r\n        id: undefined,\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        contact: \"\",\r\n        roles: [\"USER_ROLE\"]\r\n    });\r\n\r\n    const {handleSubmit} = userForm();\r\n\r\n    function onSubmit(data: any): any{\r\n        axios.post(getUriUser(`enregistrer`, userForm)).then((response) => {\r\n            if (response.status===0){\r\n                toast.success(\"Enregistrement éffectuer avec succès\");\r\n                navigate('/login');\r\n            }else {\r\n                toast.error(\"Une erreur s'est produite lors de l'enregistrement\");\r\n            }\r\n        });\r\n    }\r\n\r\n    /*const registerAdmin = async () => {\r\n        //e.preventDefault()\r\n        const {name, email, username, contact, password, roles} = data\r\n        try {\r\n            const {data} = await axios.post('/enregister', {\r\n                name,\r\n                email,\r\n                username,\r\n                contact,\r\n                password,\r\n                roles,\r\n            });\r\n            setData({...data, roles: [{\"id\": 0, \"version\": 0, \"name\": \"ROLE_USER\"}]});\r\n            if(data.error) {\r\n                toast.error(data.error)\r\n            } else {\r\n                //setData({});\r\n                //navigate('/admin')\r\n                axios.post(getUriUser(`enregistrer`, userForm)).then((response) => {\r\n                    if (response.status===0){\r\n                        toast.success(\"Enregistrement éffectuer avec succès\");\r\n                        navigate('/login');\r\n                    }else {\r\n                        toast.error(\"Une erreur s'est produite lors de l'enregistrement\");\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }*/\r\n\r\n    const loginAdmin = () => {\r\n        //setData({});\r\n        navigate('/admin');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* TopBar Component */}\r\n            <div className=\"login\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"lContainer\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            id=\"name\"\r\n                            name={\"name\"}\r\n                            onChange={(e) => setForm({...data, name: e.target.value})}\r\n                                className=\"lInput\"\r\n                                />\r\n                                <input\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                id=\"email\"\r\n                                onChange={(e) => setForm({...data, email: e.target.value})}\r\n                                className=\"lInput\"\r\n                                />\r\n                                <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                id=\"username\"\r\n                                onChange={(e) => setForm({...data, username: e.target.value})}\r\n                                className=\"lInput\"\r\n                                />\r\n                                <input\r\n                                type=\"text\"\r\n                                placeholder=\"Contact\"\r\n                                id=\"contact\"\r\n                                onChange={(e) => setForm({...data, contact: e.target.value})}\r\n                                className=\"lInput\"\r\n                                />\r\n                                <input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                id=\"password\"\r\n                                onChange={(e) => setForm({...data, password: e.target.value})}\r\n                                className=\"lInput\"\r\n                                />\r\n                                <button className=\"lButton\">\r\n                                Register\r\n                                </button>\r\n                                <button onClick={loginAdmin} className=\"lButton\">\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}