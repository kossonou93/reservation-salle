{"ast":null,"code":"import hasValue from '../../../lib/has-value';\nimport mimeTypeToExtension from './mime-type-to-extension';\n/**\n * Returns the corresponding file extensions from the provided MimeTypes.\n *\n * Unlike `mimeTypeToExtension`, this will never return `undefined` values. MimeTypes\n * that aren't found are discarded.\n *\n * @param {string[]} mimeTypes\n * @returns {string[]} Mapped file extensions each MimeType\n */\n\nvar mimeTypesToExtensions = function mimeTypesToExtensions(mimeTypes) {\n  var extensions = mimeTypes.map(mimeTypeToExtension);\n  return extensions.filter(hasValue);\n};\nexport default mimeTypesToExtensions;","map":{"version":3,"names":["hasValue","mimeTypeToExtension","mimeTypesToExtensions","mimeTypes","extensions","map","filter"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/node_modules/evergreen-ui/esm/file-uploader/src/utils/mime-types-to-extensions.js"],"sourcesContent":["import hasValue from '../../../lib/has-value';\nimport mimeTypeToExtension from './mime-type-to-extension';\n/**\n * Returns the corresponding file extensions from the provided MimeTypes.\n *\n * Unlike `mimeTypeToExtension`, this will never return `undefined` values. MimeTypes\n * that aren't found are discarded.\n *\n * @param {string[]} mimeTypes\n * @returns {string[]} Mapped file extensions each MimeType\n */\n\nvar mimeTypesToExtensions = function mimeTypesToExtensions(mimeTypes) {\n  var extensions = mimeTypes.map(mimeTypeToExtension);\n  return extensions.filter(hasValue);\n};\n\nexport default mimeTypesToExtensions;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,mBAAmB,MAAM,0BAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,SAAS,EAAE;EACpE,IAAIC,UAAU,GAAGD,SAAS,CAACE,GAAG,CAACJ,mBAAmB,CAAC;EACnD,OAAOG,UAAU,CAACE,MAAM,CAACN,QAAQ,CAAC;AACpC,CAAC;AAED,eAAeE,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}