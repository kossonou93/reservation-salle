{"ast":null,"code":"(function () {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n  wm = 150;\n  pos_bonus = 20;\n  tau_size = 150;\n  miss_coeff = 0.75;\n  exports.score = function (string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n  exports.isMatch = isMatch = function (subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n    if (!m || n > m) {\n      return false;\n    }\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n      if (i === m) {\n        return false;\n      }\n    }\n    return true;\n  };\n  exports.computeScore = computeScore = function (subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n    pos = subject_lw.indexOf(query_lw);\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n    i = -1;\n    while (++i < m) {\n      si_lw = subject_lw[i];\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n          csc_should_rebuild = false;\n        }\n        continue;\n      }\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n      while (++j < n) {\n        score_up = score_row[j];\n        if (score_up > score) {\n          score = score_up;\n        }\n        csc_score = 0;\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n            record_miss = false;\n          }\n        }\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n    score = score_row[n - 1];\n    return score * sz;\n  };\n  exports.isWordStart = isWordStart = function (pos, subject, subject_lw) {\n    var curr_s, prev_s;\n    if (pos === 0) {\n      return true;\n    }\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1];\n  };\n  exports.isWordEnd = isWordEnd = function (pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n    if (pos === len - 1) {\n      return true;\n    }\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1];\n  };\n  isSeparator = function (c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n  scorePosition = function (pos) {\n    var sc;\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n  exports.scoreSize = scoreSize = function (n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n  scoreExact = function (n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n  exports.scorePattern = scorePattern = function (count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n    if (sameCase === count) {\n      bonus += 2;\n    }\n    if (start) {\n      bonus += 3;\n    }\n    if (end) {\n      bonus += 1;\n    }\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n      if (end) {\n        bonus += 1;\n      }\n    }\n    return sameCase + sz * (sz + bonus);\n  };\n  exports.scoreCharacter = scoreCharacter = function (i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n    return posBonus + wm * csc_score;\n  };\n  exports.scoreConsecutives = scoreConsecutives = function (subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n    if (sz < k) {\n      i--;\n    }\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n  exports.scoreExactMatch = scoreExactMatch = function (subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n    i = -1;\n    sameCase = 0;\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n  AcronymResult = function () {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n    return AcronymResult;\n  }();\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n  exports.scoreAcronyms = scoreAcronyms = function (subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw[j];\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n      if (i === m) {\n        break;\n      }\n    }\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n  isAcronymFullWord = function (subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n    if (m > 12 * n) {\n      return false;\n    }\n    i = -1;\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n    return true;\n  };\n}).call(this);","map":{"version":3,"names":["AcronymResult","computeScore","emptyAcronymResult","isAcronymFullWord","isMatch","isSeparator","isWordEnd","isWordStart","miss_coeff","pos_bonus","scoreAcronyms","scoreCharacter","scoreConsecutives","scoreExact","scoreExactMatch","scorePattern","scorePosition","scoreSize","tau_size","wm","exports","score","string","query","options","allowErrors","preparedQuery","string_lw","core_lw","core_up","toLowerCase","Math","ceil","subject","query_lw","query_up","i","j","m","n","qj_lw","qj_up","si","length","charCodeAt","subject_lw","acro","acro_score","align","csc_diag","csc_row","csc_score","csc_should_rebuild","miss_budget","miss_left","pos","record_miss","score_diag","score_row","score_up","si_lw","start","sz","count","indexOf","Array","charCodes","max","curr_s","prev_s","len","next_s","c","sc","abs","quality","sameCase","end","bonus","posBonus","startOfWord","k","mi","nj","pos2","fullWord","sepCount","sumPos","nbAcronymInQuery","call"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/node_modules/fuzzaldrin-plus/lib/scorer.js"],"sourcesContent":["(function() {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n\n  wm = 150;\n\n  pos_bonus = 20;\n\n  tau_size = 150;\n\n  miss_coeff = 0.75;\n\n  exports.score = function(string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n\n  exports.isMatch = isMatch = function(subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n    if (!m || n > m) {\n      return false;\n    }\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n      if (i === m) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  exports.computeScore = computeScore = function(subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n    pos = subject_lw.indexOf(query_lw);\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n    i = -1;\n    while (++i < m) {\n      si_lw = subject_lw[i];\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n          csc_should_rebuild = false;\n        }\n        continue;\n      }\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n      while (++j < n) {\n        score_up = score_row[j];\n        if (score_up > score) {\n          score = score_up;\n        }\n        csc_score = 0;\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n            record_miss = false;\n          }\n        }\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n    score = score_row[n - 1];\n    return score * sz;\n  };\n\n  exports.isWordStart = isWordStart = function(pos, subject, subject_lw) {\n    var curr_s, prev_s;\n    if (pos === 0) {\n      return true;\n    }\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || (curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1]);\n  };\n\n  exports.isWordEnd = isWordEnd = function(pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n    if (pos === len - 1) {\n      return true;\n    }\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || (curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1]);\n  };\n\n  isSeparator = function(c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n\n  scorePosition = function(pos) {\n    var sc;\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n\n  exports.scoreSize = scoreSize = function(n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n\n  scoreExact = function(n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n\n  exports.scorePattern = scorePattern = function(count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n    if (sameCase === count) {\n      bonus += 2;\n    }\n    if (start) {\n      bonus += 3;\n    }\n    if (end) {\n      bonus += 1;\n    }\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n      if (end) {\n        bonus += 1;\n      }\n    }\n    return sameCase + sz * (sz + bonus);\n  };\n\n  exports.scoreCharacter = scoreCharacter = function(i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n    return posBonus + wm * csc_score;\n  };\n\n  exports.scoreConsecutives = scoreConsecutives = function(subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n    if (sz < k) {\n      i--;\n    }\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n\n  exports.scoreExactMatch = scoreExactMatch = function(subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n    i = -1;\n    sameCase = 0;\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n\n  AcronymResult = (function() {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n\n    return AcronymResult;\n\n  })();\n\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n\n  exports.scoreAcronyms = scoreAcronyms = function(subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw[j];\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n      if (i === m) {\n        break;\n      }\n    }\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n\n  isAcronymFullWord = function(subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n    if (m > 12 * n) {\n      return false;\n    }\n    i = -1;\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n}).call(this);\n"],"mappings":"AAAA,CAAC,YAAW;EACV,IAAIA,aAAa,EAAEC,YAAY,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,eAAe,EAAEC,YAAY,EAAEC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,EAAE;EAEhRA,EAAE,GAAG,GAAG;EAERV,SAAS,GAAG,EAAE;EAEdS,QAAQ,GAAG,GAAG;EAEdV,UAAU,GAAG,IAAI;EAEjBY,OAAO,CAACC,KAAK,GAAG,UAASC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAC/C,IAAIC,WAAW,EAAEC,aAAa,EAAEL,KAAK,EAAEM,SAAS;IAChDD,aAAa,GAAGF,OAAO,CAACE,aAAa,EAAED,WAAW,GAAGD,OAAO,CAACC,WAAW;IACxE,IAAI,EAAEA,WAAW,IAAIrB,OAAO,CAACkB,MAAM,EAAEI,aAAa,CAACE,OAAO,EAAEF,aAAa,CAACG,OAAO,CAAC,CAAC,EAAE;MACnF,OAAO,CAAC;IACV;IACAF,SAAS,GAAGL,MAAM,CAACQ,WAAW,CAAC,CAAC;IAChCT,KAAK,GAAGpB,YAAY,CAACqB,MAAM,EAAEK,SAAS,EAAED,aAAa,CAAC;IACtD,OAAOK,IAAI,CAACC,IAAI,CAACX,KAAK,CAAC;EACzB,CAAC;EAEDD,OAAO,CAAChB,OAAO,GAAGA,OAAO,GAAG,SAAAA,CAAS6B,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAChE,IAAIC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAEC,EAAE;IAChCJ,CAAC,GAAGL,OAAO,CAACU,MAAM;IAClBJ,CAAC,GAAGL,QAAQ,CAACS,MAAM;IACnB,IAAI,CAACL,CAAC,IAAIC,CAAC,GAAGD,CAAC,EAAE;MACf,OAAO,KAAK;IACd;IACAF,CAAC,GAAG,CAAC,CAAC;IACNC,CAAC,GAAG,CAAC,CAAC;IACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;MACdC,KAAK,GAAGN,QAAQ,CAACU,UAAU,CAACP,CAAC,CAAC;MAC9BI,KAAK,GAAGN,QAAQ,CAACS,UAAU,CAACP,CAAC,CAAC;MAC9B,OAAO,EAAED,CAAC,GAAGE,CAAC,EAAE;QACdI,EAAE,GAAGT,OAAO,CAACW,UAAU,CAACR,CAAC,CAAC;QAC1B,IAAIM,EAAE,KAAKF,KAAK,IAAIE,EAAE,KAAKD,KAAK,EAAE;UAChC;QACF;MACF;MACA,IAAIL,CAAC,KAAKE,CAAC,EAAE;QACX,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAEDlB,OAAO,CAACnB,YAAY,GAAGA,YAAY,GAAG,SAAAA,CAASgC,OAAO,EAAEY,UAAU,EAAEnB,aAAa,EAAE;IACjF,IAAIoB,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,kBAAkB,EAAEhB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEe,WAAW,EAAEC,SAAS,EAAEf,CAAC,EAAEgB,GAAG,EAAEhC,KAAK,EAAEW,QAAQ,EAAEsB,WAAW,EAAEnC,KAAK,EAAEoC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAEC,EAAE;IAC9MvC,KAAK,GAAGG,aAAa,CAACH,KAAK;IAC3BW,QAAQ,GAAGR,aAAa,CAACQ,QAAQ;IACjCI,CAAC,GAAGL,OAAO,CAACU,MAAM;IAClBJ,CAAC,GAAGhB,KAAK,CAACoB,MAAM;IAChBG,IAAI,GAAGpC,aAAa,CAACuB,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEW,QAAQ,CAAC;IAC1Da,UAAU,GAAGD,IAAI,CAACzB,KAAK;IACvB,IAAIyB,IAAI,CAACiB,KAAK,KAAKxB,CAAC,EAAE;MACpB,OAAO1B,UAAU,CAAC0B,CAAC,EAAED,CAAC,EAAES,UAAU,EAAED,IAAI,CAACS,GAAG,CAAC;IAC/C;IACAA,GAAG,GAAGV,UAAU,CAACmB,OAAO,CAAC9B,QAAQ,CAAC;IAClC,IAAIqB,GAAG,GAAG,CAAC,CAAC,EAAE;MACZ,OAAOzC,eAAe,CAACmB,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEW,QAAQ,EAAEqB,GAAG,EAAEhB,CAAC,EAAED,CAAC,CAAC;IACzE;IACAoB,SAAS,GAAG,IAAIO,KAAK,CAAC1B,CAAC,CAAC;IACxBW,OAAO,GAAG,IAAIe,KAAK,CAAC1B,CAAC,CAAC;IACtBuB,EAAE,GAAG7C,SAAS,CAACsB,CAAC,EAAED,CAAC,CAAC;IACpBe,WAAW,GAAGtB,IAAI,CAACC,IAAI,CAACxB,UAAU,GAAG+B,CAAC,CAAC,GAAG,CAAC;IAC3Ce,SAAS,GAAGD,WAAW;IACvBD,kBAAkB,GAAG,IAAI;IACzBf,CAAC,GAAG,CAAC,CAAC;IACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;MACdmB,SAAS,CAACrB,CAAC,CAAC,GAAG,CAAC;MAChBa,OAAO,CAACb,CAAC,CAAC,GAAG,CAAC;IAChB;IACAD,CAAC,GAAG,CAAC,CAAC;IACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;MACdsB,KAAK,GAAGf,UAAU,CAACT,CAAC,CAAC;MACrB,IAAI,CAACwB,KAAK,CAAChB,UAAU,CAAC,CAAC,CAAC,IAAIlB,aAAa,CAACwC,SAAS,EAAE;QACnD,IAAId,kBAAkB,EAAE;UACtBf,CAAC,GAAG,CAAC,CAAC;UACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;YACdW,OAAO,CAACb,CAAC,CAAC,GAAG,CAAC;UAChB;UACAe,kBAAkB,GAAG,KAAK;QAC5B;QACA;MACF;MACA/B,KAAK,GAAG,CAAC;MACToC,UAAU,GAAG,CAAC;MACdR,QAAQ,GAAG,CAAC;MACZO,WAAW,GAAG,IAAI;MAClBJ,kBAAkB,GAAG,IAAI;MACzBf,CAAC,GAAG,CAAC,CAAC;MACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;QACdoB,QAAQ,GAAGD,SAAS,CAACrB,CAAC,CAAC;QACvB,IAAIsB,QAAQ,GAAGtC,KAAK,EAAE;UACpBA,KAAK,GAAGsC,QAAQ;QAClB;QACAR,SAAS,GAAG,CAAC;QACb,IAAIjB,QAAQ,CAACG,CAAC,CAAC,KAAKuB,KAAK,EAAE;UACzBC,KAAK,GAAGtD,WAAW,CAAC6B,CAAC,EAAEH,OAAO,EAAEY,UAAU,CAAC;UAC3CM,SAAS,GAAGF,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAGrC,iBAAiB,CAACqB,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEW,QAAQ,EAAEE,CAAC,EAAEC,CAAC,EAAEwB,KAAK,CAAC;UAC1Gb,KAAK,GAAGS,UAAU,GAAG9C,cAAc,CAACyB,CAAC,EAAEC,CAAC,EAAEwB,KAAK,EAAEd,UAAU,EAAEI,SAAS,CAAC;UACvE,IAAIH,KAAK,GAAG3B,KAAK,EAAE;YACjBA,KAAK,GAAG2B,KAAK;YACbM,SAAS,GAAGD,WAAW;UACzB,CAAC,MAAM;YACL,IAAIG,WAAW,IAAI,EAAEF,SAAS,IAAI,CAAC,EAAE;cACnC,OAAOvB,IAAI,CAACoC,GAAG,CAAC9C,KAAK,EAAEqC,SAAS,CAACnB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGuB,EAAE;YAC/C;YACAN,WAAW,GAAG,KAAK;UACrB;QACF;QACAC,UAAU,GAAGE,QAAQ;QACrBV,QAAQ,GAAGC,OAAO,CAACb,CAAC,CAAC;QACrBa,OAAO,CAACb,CAAC,CAAC,GAAGc,SAAS;QACtBO,SAAS,CAACrB,CAAC,CAAC,GAAGhB,KAAK;MACtB;IACF;IACAA,KAAK,GAAGqC,SAAS,CAACnB,CAAC,GAAG,CAAC,CAAC;IACxB,OAAOlB,KAAK,GAAGyC,EAAE;EACnB,CAAC;EAED1C,OAAO,CAACb,WAAW,GAAGA,WAAW,GAAG,SAAAA,CAASgD,GAAG,EAAEtB,OAAO,EAAEY,UAAU,EAAE;IACrE,IAAIuB,MAAM,EAAEC,MAAM;IAClB,IAAId,GAAG,KAAK,CAAC,EAAE;MACb,OAAO,IAAI;IACb;IACAa,MAAM,GAAGnC,OAAO,CAACsB,GAAG,CAAC;IACrBc,MAAM,GAAGpC,OAAO,CAACsB,GAAG,GAAG,CAAC,CAAC;IACzB,OAAOlD,WAAW,CAACgE,MAAM,CAAC,IAAKD,MAAM,KAAKvB,UAAU,CAACU,GAAG,CAAC,IAAIc,MAAM,KAAKxB,UAAU,CAACU,GAAG,GAAG,CAAC,CAAE;EAC9F,CAAC;EAEDnC,OAAO,CAACd,SAAS,GAAGA,SAAS,GAAG,SAAAA,CAASiD,GAAG,EAAEtB,OAAO,EAAEY,UAAU,EAAEyB,GAAG,EAAE;IACtE,IAAIF,MAAM,EAAEG,MAAM;IAClB,IAAIhB,GAAG,KAAKe,GAAG,GAAG,CAAC,EAAE;MACnB,OAAO,IAAI;IACb;IACAF,MAAM,GAAGnC,OAAO,CAACsB,GAAG,CAAC;IACrBgB,MAAM,GAAGtC,OAAO,CAACsB,GAAG,GAAG,CAAC,CAAC;IACzB,OAAOlD,WAAW,CAACkE,MAAM,CAAC,IAAKH,MAAM,KAAKvB,UAAU,CAACU,GAAG,CAAC,IAAIgB,MAAM,KAAK1B,UAAU,CAACU,GAAG,GAAG,CAAC,CAAE;EAC9F,CAAC;EAEDlD,WAAW,GAAG,SAAAA,CAASmE,CAAC,EAAE;IACxB,OAAOA,CAAC,KAAK,GAAG,IAAIA,CAAC,KAAK,GAAG,IAAIA,CAAC,KAAK,GAAG,IAAIA,CAAC,KAAK,GAAG,IAAIA,CAAC,KAAK,GAAG,IAAIA,CAAC,KAAK,IAAI;EACpF,CAAC;EAEDxD,aAAa,GAAG,SAAAA,CAASuC,GAAG,EAAE;IAC5B,IAAIkB,EAAE;IACN,IAAIlB,GAAG,GAAG9C,SAAS,EAAE;MACnBgE,EAAE,GAAGhE,SAAS,GAAG8C,GAAG;MACpB,OAAO,GAAG,GAAGkB,EAAE,GAAGA,EAAE;IACtB,CAAC,MAAM;MACL,OAAO1C,IAAI,CAACoC,GAAG,CAAC,GAAG,GAAG1D,SAAS,GAAG8C,GAAG,EAAE,CAAC,CAAC;IAC3C;EACF,CAAC;EAEDnC,OAAO,CAACH,SAAS,GAAGA,SAAS,GAAG,SAAAA,CAASsB,CAAC,EAAED,CAAC,EAAE;IAC7C,OAAOpB,QAAQ,IAAIA,QAAQ,GAAGa,IAAI,CAAC2C,GAAG,CAACpC,CAAC,GAAGC,CAAC,CAAC,CAAC;EAChD,CAAC;EAED1B,UAAU,GAAG,SAAAA,CAAS0B,CAAC,EAAED,CAAC,EAAEqC,OAAO,EAAEpB,GAAG,EAAE;IACxC,OAAO,CAAC,GAAGhB,CAAC,IAAIpB,EAAE,GAAGwD,OAAO,GAAG3D,aAAa,CAACuC,GAAG,CAAC,CAAC,GAAGtC,SAAS,CAACsB,CAAC,EAAED,CAAC,CAAC;EACtE,CAAC;EAEDlB,OAAO,CAACL,YAAY,GAAGA,YAAY,GAAG,SAAAA,CAASgD,KAAK,EAAEO,GAAG,EAAEM,QAAQ,EAAEf,KAAK,EAAEgB,GAAG,EAAE;IAC/E,IAAIC,KAAK,EAAEhB,EAAE;IACbA,EAAE,GAAGC,KAAK;IACVe,KAAK,GAAG,CAAC;IACT,IAAIF,QAAQ,KAAKb,KAAK,EAAE;MACtBe,KAAK,IAAI,CAAC;IACZ;IACA,IAAIjB,KAAK,EAAE;MACTiB,KAAK,IAAI,CAAC;IACZ;IACA,IAAID,GAAG,EAAE;MACPC,KAAK,IAAI,CAAC;IACZ;IACA,IAAIf,KAAK,KAAKO,GAAG,EAAE;MACjB,IAAIT,KAAK,EAAE;QACT,IAAIe,QAAQ,KAAKN,GAAG,EAAE;UACpBR,EAAE,IAAI,CAAC;QACT,CAAC,MAAM;UACLA,EAAE,IAAI,CAAC;QACT;MACF;MACA,IAAIe,GAAG,EAAE;QACPC,KAAK,IAAI,CAAC;MACZ;IACF;IACA,OAAOF,QAAQ,GAAGd,EAAE,IAAIA,EAAE,GAAGgB,KAAK,CAAC;EACrC,CAAC;EAED1D,OAAO,CAACT,cAAc,GAAGA,cAAc,GAAG,SAAAA,CAASyB,CAAC,EAAEC,CAAC,EAAEwB,KAAK,EAAEd,UAAU,EAAEI,SAAS,EAAE;IACrF,IAAI4B,QAAQ;IACZA,QAAQ,GAAG/D,aAAa,CAACoB,CAAC,CAAC;IAC3B,IAAIyB,KAAK,EAAE;MACT,OAAOkB,QAAQ,GAAG5D,EAAE,IAAI,CAAC4B,UAAU,GAAGI,SAAS,GAAGJ,UAAU,GAAGI,SAAS,IAAI,EAAE,CAAC;IACjF;IACA,OAAO4B,QAAQ,GAAG5D,EAAE,GAAGgC,SAAS;EAClC,CAAC;EAED/B,OAAO,CAACR,iBAAiB,GAAGA,iBAAiB,GAAG,SAAAA,CAASqB,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEW,QAAQ,EAAEE,CAAC,EAAEC,CAAC,EAAE2C,WAAW,EAAE;IAChH,IAAIC,CAAC,EAAE3C,CAAC,EAAE4C,EAAE,EAAE3C,CAAC,EAAE4C,EAAE,EAAEP,QAAQ,EAAEd,EAAE;IACjCxB,CAAC,GAAGL,OAAO,CAACU,MAAM;IAClBJ,CAAC,GAAGhB,KAAK,CAACoB,MAAM;IAChBuC,EAAE,GAAG5C,CAAC,GAAGF,CAAC;IACV+C,EAAE,GAAG5C,CAAC,GAAGF,CAAC;IACV4C,CAAC,GAAGC,EAAE,GAAGC,EAAE,GAAGD,EAAE,GAAGC,EAAE;IACrBP,QAAQ,GAAG,CAAC;IACZd,EAAE,GAAG,CAAC;IACN,IAAIvC,KAAK,CAACc,CAAC,CAAC,KAAKJ,OAAO,CAACG,CAAC,CAAC,EAAE;MAC3BwC,QAAQ,EAAE;IACZ;IACA,OAAO,EAAEd,EAAE,GAAGmB,CAAC,IAAI/C,QAAQ,CAAC,EAAEG,CAAC,CAAC,KAAKQ,UAAU,CAAC,EAAET,CAAC,CAAC,EAAE;MACpD,IAAIb,KAAK,CAACc,CAAC,CAAC,KAAKJ,OAAO,CAACG,CAAC,CAAC,EAAE;QAC3BwC,QAAQ,EAAE;MACZ;IACF;IACA,IAAId,EAAE,GAAGmB,CAAC,EAAE;MACV7C,CAAC,EAAE;IACL;IACA,IAAI0B,EAAE,KAAK,CAAC,EAAE;MACZ,OAAO,CAAC,GAAG,CAAC,GAAGc,QAAQ;IACzB;IACA,OAAO7D,YAAY,CAAC+C,EAAE,EAAEvB,CAAC,EAAEqC,QAAQ,EAAEI,WAAW,EAAE1E,SAAS,CAAC8B,CAAC,EAAEH,OAAO,EAAEY,UAAU,EAAEP,CAAC,CAAC,CAAC;EACzF,CAAC;EAEDlB,OAAO,CAACN,eAAe,GAAGA,eAAe,GAAG,SAAAA,CAASmB,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEW,QAAQ,EAAEqB,GAAG,EAAEhB,CAAC,EAAED,CAAC,EAAE;IACpG,IAAIuC,GAAG,EAAEzC,CAAC,EAAEgD,IAAI,EAAER,QAAQ,EAAEf,KAAK;IACjCA,KAAK,GAAGtD,WAAW,CAACgD,GAAG,EAAEtB,OAAO,EAAEY,UAAU,CAAC;IAC7C,IAAI,CAACgB,KAAK,EAAE;MACVuB,IAAI,GAAGvC,UAAU,CAACmB,OAAO,CAAC9B,QAAQ,EAAEqB,GAAG,GAAG,CAAC,CAAC;MAC5C,IAAI6B,IAAI,GAAG,CAAC,CAAC,EAAE;QACbvB,KAAK,GAAGtD,WAAW,CAAC6E,IAAI,EAAEnD,OAAO,EAAEY,UAAU,CAAC;QAC9C,IAAIgB,KAAK,EAAE;UACTN,GAAG,GAAG6B,IAAI;QACZ;MACF;IACF;IACAhD,CAAC,GAAG,CAAC,CAAC;IACNwC,QAAQ,GAAG,CAAC;IACZ,OAAO,EAAExC,CAAC,GAAGG,CAAC,EAAE;MACd,IAAIhB,KAAK,CAACgC,GAAG,GAAGnB,CAAC,CAAC,KAAKH,OAAO,CAACG,CAAC,CAAC,EAAE;QACjCwC,QAAQ,EAAE;MACZ;IACF;IACAC,GAAG,GAAGvE,SAAS,CAACiD,GAAG,GAAGhB,CAAC,GAAG,CAAC,EAAEN,OAAO,EAAEY,UAAU,EAAEP,CAAC,CAAC;IACpD,OAAOzB,UAAU,CAAC0B,CAAC,EAAED,CAAC,EAAEvB,YAAY,CAACwB,CAAC,EAAEA,CAAC,EAAEqC,QAAQ,EAAEf,KAAK,EAAEgB,GAAG,CAAC,EAAEtB,GAAG,CAAC;EACxE,CAAC;EAEDvD,aAAa,GAAI,YAAW;IAC1B,SAASA,aAAaA,CAACqB,KAAK,EAAEkC,GAAG,EAAEQ,KAAK,EAAE;MACxC,IAAI,CAAC1C,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACkC,GAAG,GAAGA,GAAG;MACd,IAAI,CAACQ,KAAK,GAAGA,KAAK;IACpB;IAEA,OAAO/D,aAAa;EAEtB,CAAC,CAAE,CAAC;EAEJE,kBAAkB,GAAG,IAAIF,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAEjDoB,OAAO,CAACV,aAAa,GAAGA,aAAa,GAAG,SAAAA,CAASuB,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEW,QAAQ,EAAE;IACrF,IAAI6B,KAAK,EAAEsB,QAAQ,EAAEjD,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEoC,QAAQ,EAAEvD,KAAK,EAAEiE,QAAQ,EAAEC,MAAM;IACzEjD,CAAC,GAAGL,OAAO,CAACU,MAAM;IAClBJ,CAAC,GAAGhB,KAAK,CAACoB,MAAM;IAChB,IAAI,EAAEL,CAAC,GAAG,CAAC,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAE;MACrB,OAAOrC,kBAAkB;IAC3B;IACA6D,KAAK,GAAG,CAAC;IACTuB,QAAQ,GAAG,CAAC;IACZC,MAAM,GAAG,CAAC;IACVX,QAAQ,GAAG,CAAC;IACZxC,CAAC,GAAG,CAAC,CAAC;IACNC,CAAC,GAAG,CAAC,CAAC;IACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;MACdC,KAAK,GAAGN,QAAQ,CAACG,CAAC,CAAC;MACnB,IAAIhC,WAAW,CAACmC,KAAK,CAAC,EAAE;QACtBJ,CAAC,GAAGS,UAAU,CAACmB,OAAO,CAACxB,KAAK,EAAEJ,CAAC,GAAG,CAAC,CAAC;QACpC,IAAIA,CAAC,GAAG,CAAC,CAAC,EAAE;UACVkD,QAAQ,EAAE;UACV;QACF,CAAC,MAAM;UACL;QACF;MACF;MACA,OAAO,EAAElD,CAAC,GAAGE,CAAC,EAAE;QACd,IAAIE,KAAK,KAAKK,UAAU,CAACT,CAAC,CAAC,IAAI7B,WAAW,CAAC6B,CAAC,EAAEH,OAAO,EAAEY,UAAU,CAAC,EAAE;UAClE,IAAItB,KAAK,CAACc,CAAC,CAAC,KAAKJ,OAAO,CAACG,CAAC,CAAC,EAAE;YAC3BwC,QAAQ,EAAE;UACZ;UACAW,MAAM,IAAInD,CAAC;UACX2B,KAAK,EAAE;UACP;QACF;MACF;MACA,IAAI3B,CAAC,KAAKE,CAAC,EAAE;QACX;MACF;IACF;IACA,IAAIyB,KAAK,GAAG,CAAC,EAAE;MACb,OAAO7D,kBAAkB;IAC3B;IACAmF,QAAQ,GAAGtB,KAAK,KAAKxB,CAAC,GAAGpC,iBAAiB,CAAC8B,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEwC,KAAK,CAAC,GAAG,KAAK;IACrF1C,KAAK,GAAGN,YAAY,CAACgD,KAAK,EAAExB,CAAC,EAAEqC,QAAQ,EAAE,IAAI,EAAES,QAAQ,CAAC;IACxD,OAAO,IAAIrF,aAAa,CAACqB,KAAK,EAAEkE,MAAM,GAAGxB,KAAK,EAAEA,KAAK,GAAGuB,QAAQ,CAAC;EACnE,CAAC;EAEDnF,iBAAiB,GAAG,SAAAA,CAAS8B,OAAO,EAAEY,UAAU,EAAEtB,KAAK,EAAEiE,gBAAgB,EAAE;IACzE,IAAIzB,KAAK,EAAE3B,CAAC,EAAEE,CAAC,EAAEC,CAAC;IAClBD,CAAC,GAAGL,OAAO,CAACU,MAAM;IAClBJ,CAAC,GAAGhB,KAAK,CAACoB,MAAM;IAChBoB,KAAK,GAAG,CAAC;IACT,IAAIzB,CAAC,GAAG,EAAE,GAAGC,CAAC,EAAE;MACd,OAAO,KAAK;IACd;IACAH,CAAC,GAAG,CAAC,CAAC;IACN,OAAO,EAAEA,CAAC,GAAGE,CAAC,EAAE;MACd,IAAI/B,WAAW,CAAC6B,CAAC,EAAEH,OAAO,EAAEY,UAAU,CAAC,IAAI,EAAEkB,KAAK,GAAGyB,gBAAgB,EAAE;QACrE,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;AAEH,CAAC,EAAEC,IAAI,CAAC,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}