{"ast":null,"code":"import { MimeType } from '../../../constants';\n/**\n * Returns the corresponding file extension from the provided MimeType.\n * @param {string} mimeType\n * @returns {string | undefined} Mapped file extension from the MimeType, or `undefined` if not found\n */\n\nvar mimeTypeToExtension = function mimeTypeToExtension(mimeType) {\n  var keys = Object.keys(MimeType);\n  var key = keys.find(function (key) {\n    return MimeType[key] === mimeType;\n  });\n  if (key == null) {\n    return undefined;\n  }\n  return \".\".concat(key);\n};\nexport default mimeTypeToExtension;","map":{"version":3,"names":["MimeType","mimeTypeToExtension","mimeType","keys","Object","key","find","undefined","concat"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/node_modules/evergreen-ui/esm/file-uploader/src/utils/mime-type-to-extension.js"],"sourcesContent":["import { MimeType } from '../../../constants';\n/**\n * Returns the corresponding file extension from the provided MimeType.\n * @param {string} mimeType\n * @returns {string | undefined} Mapped file extension from the MimeType, or `undefined` if not found\n */\n\nvar mimeTypeToExtension = function mimeTypeToExtension(mimeType) {\n  var keys = Object.keys(MimeType);\n  var key = keys.find(function (key) {\n    return MimeType[key] === mimeType;\n  });\n\n  if (key == null) {\n    return undefined;\n  }\n\n  return \".\".concat(key);\n};\n\nexport default mimeTypeToExtension;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,QAAQ,EAAE;EAC/D,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,QAAQ,CAAC;EAChC,IAAIK,GAAG,GAAGF,IAAI,CAACG,IAAI,CAAC,UAAUD,GAAG,EAAE;IACjC,OAAOL,QAAQ,CAACK,GAAG,CAAC,KAAKH,QAAQ;EACnC,CAAC,CAAC;EAEF,IAAIG,GAAG,IAAI,IAAI,EAAE;IACf,OAAOE,SAAS;EAClB;EAEA,OAAO,GAAG,CAACC,MAAM,CAACH,GAAG,CAAC;AACxB,CAAC;AAED,eAAeJ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}