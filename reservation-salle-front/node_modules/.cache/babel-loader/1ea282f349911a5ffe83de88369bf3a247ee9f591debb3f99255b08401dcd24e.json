{"ast":null,"code":"import humanize from 'humanize-plus';\nimport mimeTypesToExtensions from './mime-types-to-extensions';\n/**\n * Returns a standard message informing the user what file extensions are accepted based\n * on the provided array of MimeTypes\n * @param {string[]} acceptedMimeTypes\n * @returns {string}\n */\n\nexport var getAcceptedTypesMessage = function getAcceptedTypesMessage(acceptedMimeTypes) {\n  var fileExtensions = humanize.oxford(mimeTypesToExtensions(acceptedMimeTypes));\n  return \"You can upload \".concat(fileExtensions, \" formats.\");\n};\n/**\n * Returns a standard message informing the user of the maximum individual file size\n * @param {number} maxSizeInBytes\n * @returns {string}\n */\n\nexport var getFileSizeMessage = function getFileSizeMessage(maxSizeInBytes) {\n  return \"You can upload files up to \".concat(humanize.fileSize(maxSizeInBytes, 0), \".\");\n};\n/**\n * Returns a standard message informing the user of the maximum number of files that can be uploaded\n * @param {number} maxFiles\n * @returns {string}\n */\n\nexport var getMaxFilesMessage = function getMaxFilesMessage(maxFiles) {\n  return \"You can upload up to \".concat(maxFiles, \" \").concat(maxFiles === 1 ? 'file' : 'files', \".\");\n};","map":{"version":3,"names":["humanize","mimeTypesToExtensions","getAcceptedTypesMessage","acceptedMimeTypes","fileExtensions","oxford","concat","getFileSizeMessage","maxSizeInBytes","fileSize","getMaxFilesMessage","maxFiles"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/node_modules/evergreen-ui/esm/file-uploader/src/utils/messages.js"],"sourcesContent":["import humanize from 'humanize-plus';\nimport mimeTypesToExtensions from './mime-types-to-extensions';\n/**\n * Returns a standard message informing the user what file extensions are accepted based\n * on the provided array of MimeTypes\n * @param {string[]} acceptedMimeTypes\n * @returns {string}\n */\n\nexport var getAcceptedTypesMessage = function getAcceptedTypesMessage(acceptedMimeTypes) {\n  var fileExtensions = humanize.oxford(mimeTypesToExtensions(acceptedMimeTypes));\n  return \"You can upload \".concat(fileExtensions, \" formats.\");\n};\n/**\n * Returns a standard message informing the user of the maximum individual file size\n * @param {number} maxSizeInBytes\n * @returns {string}\n */\n\nexport var getFileSizeMessage = function getFileSizeMessage(maxSizeInBytes) {\n  return \"You can upload files up to \".concat(humanize.fileSize(maxSizeInBytes, 0), \".\");\n};\n/**\n * Returns a standard message informing the user of the maximum number of files that can be uploaded\n * @param {number} maxFiles\n * @returns {string}\n */\n\nexport var getMaxFilesMessage = function getMaxFilesMessage(maxFiles) {\n  return \"You can upload up to \".concat(maxFiles, \" \").concat(maxFiles === 1 ? 'file' : 'files', \".\");\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AACpC,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,uBAAuB,GAAG,SAASA,uBAAuBA,CAACC,iBAAiB,EAAE;EACvF,IAAIC,cAAc,GAAGJ,QAAQ,CAACK,MAAM,CAACJ,qBAAqB,CAACE,iBAAiB,CAAC,CAAC;EAC9E,OAAO,iBAAiB,CAACG,MAAM,CAACF,cAAc,EAAE,WAAW,CAAC;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIG,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,cAAc,EAAE;EAC1E,OAAO,6BAA6B,CAACF,MAAM,CAACN,QAAQ,CAACS,QAAQ,CAACD,cAAc,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;AACxF,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIE,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,QAAQ,EAAE;EACpE,OAAO,uBAAuB,CAACL,MAAM,CAACK,QAAQ,EAAE,GAAG,CAAC,CAACL,MAAM,CAACK,QAAQ,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,EAAE,GAAG,CAAC;AACrG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}