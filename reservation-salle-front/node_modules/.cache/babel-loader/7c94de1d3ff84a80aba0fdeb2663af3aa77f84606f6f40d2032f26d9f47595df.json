{"ast":null,"code":"import React, { useContext, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { StackingOrder } from '../../constants';\nimport StackingContext from './StackingContext';\nvar Stack = /*#__PURE__*/memo(function Stack(_ref) {\n  var children = _ref.children,\n    _ref$value = _ref.value,\n    value = _ref$value === void 0 ? StackingOrder.STACKING_CONTEXT : _ref$value;\n  var previousValue = useContext(StackingContext);\n  var currentValue = Math.max(value, previousValue);\n  var nextValue = currentValue + 1;\n  return /*#__PURE__*/React.createElement(StackingContext.Provider, {\n    value: nextValue\n  }, children(currentValue));\n});\nStack.propTypes = {\n  /**\n   * Function that takes the current z-index and returns a React Node.\n   * (zIndex) => ReactNode.\n   */\n  children: PropTypes.func.isRequired,\n  /**\n   * Set the value of the stack. This will increment for children.\n   */\n  value: PropTypes.number\n};\nexport default Stack;","map":{"version":3,"names":["React","useContext","memo","PropTypes","StackingOrder","StackingContext","Stack","_ref","children","_ref$value","value","STACKING_CONTEXT","previousValue","currentValue","Math","max","nextValue","createElement","Provider","propTypes","func","isRequired","number"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/node_modules/evergreen-ui/esm/stack/src/Stack.js"],"sourcesContent":["import React, { useContext, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { StackingOrder } from '../../constants';\nimport StackingContext from './StackingContext';\nvar Stack = /*#__PURE__*/memo(function Stack(_ref) {\n  var children = _ref.children,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? StackingOrder.STACKING_CONTEXT : _ref$value;\n  var previousValue = useContext(StackingContext);\n  var currentValue = Math.max(value, previousValue);\n  var nextValue = currentValue + 1;\n  return /*#__PURE__*/React.createElement(StackingContext.Provider, {\n    value: nextValue\n  }, children(currentValue));\n});\nStack.propTypes = {\n  /**\n   * Function that takes the current z-index and returns a React Node.\n   * (zIndex) => ReactNode.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Set the value of the stack. This will increment for children.\n   */\n  value: PropTypes.number\n};\nexport default Stack;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,IAAI,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,IAAIC,KAAK,GAAG,aAAaJ,IAAI,CAAC,SAASI,KAAKA,CAACC,IAAI,EAAE;EACjD,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IACxBC,UAAU,GAAGF,IAAI,CAACG,KAAK;IACvBA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAAC,GAAGL,aAAa,CAACO,gBAAgB,GAAGF,UAAU;EAC/E,IAAIG,aAAa,GAAGX,UAAU,CAACI,eAAe,CAAC;EAC/C,IAAIQ,YAAY,GAAGC,IAAI,CAACC,GAAG,CAACL,KAAK,EAAEE,aAAa,CAAC;EACjD,IAAII,SAAS,GAAGH,YAAY,GAAG,CAAC;EAChC,OAAO,aAAab,KAAK,CAACiB,aAAa,CAACZ,eAAe,CAACa,QAAQ,EAAE;IAChER,KAAK,EAAEM;EACT,CAAC,EAAER,QAAQ,CAACK,YAAY,CAAC,CAAC;AAC5B,CAAC,CAAC;AACFP,KAAK,CAACa,SAAS,GAAG;EAChB;AACF;AACA;AACA;EACEX,QAAQ,EAAEL,SAAS,CAACiB,IAAI,CAACC,UAAU;EAEnC;AACF;AACA;EACEX,KAAK,EAAEP,SAAS,CAACmB;AACnB,CAAC;AACD,eAAehB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}