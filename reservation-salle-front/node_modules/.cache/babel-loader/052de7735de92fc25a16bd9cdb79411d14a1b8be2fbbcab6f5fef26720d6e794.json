{"ast":null,"code":"/**\n * Generates a token value for `aria-describedby` when the author provides `description`, `hint`, or `validationMessage` strings.\n * @param {String} id\n * @param {Object} helperTextCandidates\n * @param {String | React.ReactNode} [helperTextCandidates.description]\n * @param {String | React.ReactNode} [helperTextCandidates.hint]\n * @param {String | React.ReactNode} [helperTextCandidates.validationMessage]\n * @returns {String | null}\n */\nexport function generateAriaDescribedBy(id, _ref) {\n  var description = _ref.description,\n    hint = _ref.hint,\n    validationMessage = _ref.validationMessage;\n  var tokens = ''; // Only add each of the following to aria-describedby if\n  // it was provided as a string. When the author provides\n  // a React element, we assume they want to manage aria-describedby themselves.\n  // NB: Token order matches the order that these hint texts appear in the DOM.\n  // If the order of the hint texts changes, this should also change.\n\n  if (typeof description === 'string') {\n    tokens += ' ' + id + '__description';\n  }\n  if (typeof validationMessage === 'string') {\n    tokens += ' ' + id + '__validation-message';\n  }\n  if (typeof hint === 'string') {\n    tokens += ' ' + id + '__hint';\n  }\n  if (tokens.length) {\n    return tokens.trim();\n  }\n  return null;\n}","map":{"version":3,"names":["generateAriaDescribedBy","id","_ref","description","hint","validationMessage","tokens","length","trim"],"sources":["D:/SPRING BOOT/reservation-salle/reservation-salle-front/node_modules/evergreen-ui/esm/lib/generate-aria-describedby.js"],"sourcesContent":["/**\n * Generates a token value for `aria-describedby` when the author provides `description`, `hint`, or `validationMessage` strings.\n * @param {String} id\n * @param {Object} helperTextCandidates\n * @param {String | React.ReactNode} [helperTextCandidates.description]\n * @param {String | React.ReactNode} [helperTextCandidates.hint]\n * @param {String | React.ReactNode} [helperTextCandidates.validationMessage]\n * @returns {String | null}\n */\nexport function generateAriaDescribedBy(id, _ref) {\n  var description = _ref.description,\n      hint = _ref.hint,\n      validationMessage = _ref.validationMessage;\n  var tokens = ''; // Only add each of the following to aria-describedby if\n  // it was provided as a string. When the author provides\n  // a React element, we assume they want to manage aria-describedby themselves.\n  // NB: Token order matches the order that these hint texts appear in the DOM.\n  // If the order of the hint texts changes, this should also change.\n\n  if (typeof description === 'string') {\n    tokens += ' ' + id + '__description';\n  }\n\n  if (typeof validationMessage === 'string') {\n    tokens += ' ' + id + '__validation-message';\n  }\n\n  if (typeof hint === 'string') {\n    tokens += ' ' + id + '__hint';\n  }\n\n  if (tokens.length) {\n    return tokens.trim();\n  }\n\n  return null;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAuBA,CAACC,EAAE,EAAEC,IAAI,EAAE;EAChD,IAAIC,WAAW,GAAGD,IAAI,CAACC,WAAW;IAC9BC,IAAI,GAAGF,IAAI,CAACE,IAAI;IAChBC,iBAAiB,GAAGH,IAAI,CAACG,iBAAiB;EAC9C,IAAIC,MAAM,GAAG,EAAE,CAAC,CAAC;EACjB;EACA;EACA;EACA;;EAEA,IAAI,OAAOH,WAAW,KAAK,QAAQ,EAAE;IACnCG,MAAM,IAAI,GAAG,GAAGL,EAAE,GAAG,eAAe;EACtC;EAEA,IAAI,OAAOI,iBAAiB,KAAK,QAAQ,EAAE;IACzCC,MAAM,IAAI,GAAG,GAAGL,EAAE,GAAG,sBAAsB;EAC7C;EAEA,IAAI,OAAOG,IAAI,KAAK,QAAQ,EAAE;IAC5BE,MAAM,IAAI,GAAG,GAAGL,EAAE,GAAG,QAAQ;EAC/B;EAEA,IAAIK,MAAM,CAACC,MAAM,EAAE;IACjB,OAAOD,MAAM,CAACE,IAAI,CAAC,CAAC;EACtB;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}